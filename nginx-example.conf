# Example Nginx configuration for Opening Tree API
# This configuration maps a domain to the WSGI application

server {
    listen 80;
    server_name openingtrees.example.com;  # Replace with your domain
    
    # Redirect HTTP to HTTPS (recommended for production)
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name openingtrees.example.com;  # Replace with your domain
    
    # SSL configuration (replace with your certificate paths)
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types application/json text/plain text/css application/javascript;
    
    # Rate limiting (optional)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Main API location
    location / {
        # Apply rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to the WSGI application
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS headers (if needed for web frontend)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Health check endpoint (optional)
    location /health {
        access_log off;
        proxy_pass http://127.0.0.1:8000/;
        proxy_set_header Host $host;
    }
    
    # Logging
    access_log /var/log/nginx/openingtrees_access.log;
    error_log /var/log/nginx/openingtrees_error.log;
}

# Upstream configuration (alternative approach for load balancing)
# Uncomment and modify if you want to run multiple WSGI instances
#
# upstream openingtrees_backend {
#     server 127.0.0.1:8000;
#     server 127.0.0.1:8001;  # Additional instance
#     server 127.0.0.1:8002;  # Additional instance
# }
#
# Then replace 'proxy_pass http://127.0.0.1:8000;' with:
# proxy_pass http://openingtrees_backend;